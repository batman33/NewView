<?php
/*
Пример

На этом примере показывается, как можно создать нумерацию страниц в одном из ваших контроллеров:
 $this->load->library('pagination');

 $config['base_url'] = 'http://www.your-site.com/index.php/test/page/';
 $config['total_rows'] = '200';
 $config['per_page'] = '20'; 

 $this->pagination->initialize($config); 

 echo $this->pagination->create_links();

Массив $config содержит конфигурационные переменные. 
Он передается в функцию $this->pagination->initialize, как показано выше. 
Хотя массив имеет двенадцать опций, для работы класса необходимо задать минимум три:

1. base_url — это полный путь к классу контроллера/функции содержащей Вашу нумерацию страниц. 
В примере выше контроллер «Test», а функция «page». Имейте ввиду, что можно изменить URI, если вам необходима другая структура.

2. total_rows — это общее число страниц, которые будут в результате. 
Обычно это количество записей, возвращаемых запросом к базе данных.

3. per_page — это количество элементов, которое вы намерены показать на странице. 
В примере выше, будет выводится двадцать элементов на страницу.

Функция create_links() вернет пустую строку, когда не будет необходимости показывать нумерацию.
Настройка параметров в файле конфигурации

Если вас не устраивает предыдущий метод, то вы можете поместить все настройки в конфигурационный файл. Для этого необходимо создать файл с именем pagination.php и определить внутри массив $config. Далее сохраните файл в каталоге config/pagination.php и он будет загружаться автоматически. Теперь вам НЕ надо писать $this->pagination->initialize.
Настройка нумерации страниц

Ниже перечислен полный список параметров, которые вы можете передать в функцию инициализации.
*/

//Функция нумерации страниц автоматически определяет, какой сегмент URI содержит номер страницы. Если Вам необходимо явно указать сегмент, можно задать его этим параметром.
//$config['uri_segment'] = 3;

//Количество ссылок, которое будет перед и после номера выбранной страницы. Например, при указании этого параметра равным 2, будет по два числа с каждой стороны, как в примере выше.
$config['num_links'] = 4;

//***************************************** Добавление элементов разметки ****************************

//Если вы хотите заключить блок нумерации страниц в другой элемент разметки, то можете сделать это с помощью следующих двух параметров:
$config['full_tag_open'] = '<div class="pagination">';
$config['full_tag_close'] = '</div>';

//Настройка ссылки, указывающей на первую страницу. С помошью этого параметра задается текст ссылки, указывающей на первую страницу. Например, "На первую страницу".
$config['first_link'] = 'В начало';

$config['first_tag_open'] = '<div class="first">';
$config['first_tag_close'] = '</div>';

//Настройка ссылки, указывающей на последнюю страницу. С помошью этого параметра задается текст ссылки, указывающей на последнюю страницу. Например, "На последнюю страницу".
$config['last_link'] = 'В конец';

$config['last_tag_open'] = '<div class="end">';
$config['last_tag_close'] = '</div>';

//Настройка ссылки, указывающей на следующую страницу. С помошью этого параметра задается текст ссылки, указывающей на следующую страницу. Например, "Далее".
$config['next_link'] = 'Далее';

$config['next_tag_open'] = '<div class="next">';
$config['next_tag_close'] = '</div>';

//Настройка ссылки, указывающей на предыдущую страницу. С помошью этого параметра задается текст ссылки, указывающей на предыдущую страницу. Например, "Назад".
$config['prev_link'] = 'Назад';

$config['prev_tag_open'] = '<div class="prev">';
$config['prev_tag_close'] = '</div>';

//Настройка ссылки, указывающей на текущую страницу
$config['cur_tag_open'] = '<div><a class="active">';
$config['cur_tag_close'] = '</a></div>';

//Настройка числовых ссылок
$config['num_tag_open'] = '<div>';
$config['num_tag_close'] = '</div>';
